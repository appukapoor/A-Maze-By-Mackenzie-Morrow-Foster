package edu.wm.cs.cs301.MackenzieMorrowFoster.ui;

import edu.wm.cs.cs301.MackenzieMorrowFoster.R;
import edu.wm.cs.cs301.MackenzieMorrowFoster.R.id;
import edu.wm.cs.cs301.MackenzieMorrowFoster.R.layout;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.Toast;
import android.widget.ToggleButton;

public class PlayActivity extends Activity {
	private Button pause = (Button) findViewById(R.id.button2);
	private Button play = (Button) findViewById(R.id.button3);
	private int energyLevel = 2500;
	private ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar1);
	private Intent intent;
	private Button rightArrow = (Button) findViewById(R.id.imageButton1);
	private Button leftArrow = (Button) findViewById(R.id.imageButton3);
	private Button upArrow = (Button) findViewById(R.id.imageButton2);
	private Button downArrow = (Button) findViewById(R.id.imageButton4);
	
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_play);
		Log.v("PlayActivity", "Created activity_play");

		//getting the intents from GeneratingActivity and passing them on to FinishActivity
		intent = getIntent();
		intent.setClass(PlayActivity.this, FinishActivity.class);
		
		String driver = intent.getStringExtra("Driver");
		if (driver.equals("Manual")) {
			setRightArrow();
			setLeftArrow();
			setUpArrow();
			setDownArrow();
		}
		else {
			setUpPause();
			setUpPlay();
		}
	}
	
	/**
	 * Takes the player back a screen when clicked. On the action bar.
	 */
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		if (item.getItemId() == android.R.id.home) {
			finish();
		}
		return super.onOptionsItemSelected(item);
	}
	
	/**
	 * Temprorary button to move to the finish screen.
	 * @param view
	 */
	public void goToFinishActivity(View view) {
		Intent intent = new Intent(this, FinishActivity.class);
		startActivity(intent);
		Log.v("PlayActivity", "Created the intent to move to FinishActivity");
	}
	
	/**
	 * Toggles on and off buttons for maze, solution, and walls.
	 * @param view
	 */
	public void onToggleClicked(View view) {
	    // Is the toggle on?
	    boolean on = ((ToggleButton) view).isChecked();
	    if (on) {
	        Log.v("PlayActivity", "ToggleButton is on");
	        Toast.makeText(getApplicationContext(), "Toggle On", Toast.LENGTH_SHORT).show();
	    } else {
	        Log.v("PlayActivity", "ToggleButton is off");
	        Toast.makeText(getApplicationContext(), "Toggle Off", Toast.LENGTH_SHORT).show();
	    }
	}
	
	/**
	 * When clicked, it sends the player back to AMazeActivity
	 */
	@Override
	public void onBackPressed() {
		intent.setClass(PlayActivity.this, AMazeActivity.class);
		startActivity(intent);
		super.onBackPressed();
	}
	
	/**
	 * Sets the RightArrow button to move right if clicked.
	 */
	public void setRightArrow() {
		rightArrow.setEnabled(true);
		rightArrow.setVisibility(View.VISIBLE);
		rightArrow.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				energyLevel -= 3;
				progressBar.setProgress(energyLevel);
				Log.v("PlayActivity", "setRightArrow: went right");
				Toast.makeText(PlayActivity.this, "went right", Toast.LENGTH_SHORT).show();

				if (energyLevel <= 0) {
					Log.v("PlayActivity", "Out of Energy");
					Toast.makeText(PlayActivity.this, "Out of Energy", Toast.LENGTH_SHORT).show();
					intent.putExtra("Empty Battery", true);
					startActivity(intent);
				}	
			}
		});
	}
	
	/**
	 * Sets the LeftArrow button to move left if clicked.
	 */
	public void setLeftArrow() {
		leftArrow.setEnabled(true);
		leftArrow.setVisibility(View.VISIBLE);
		leftArrow.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				energyLevel -= 3;
				progressBar.setProgress(energyLevel);
				Log.v("PlayActivity", "setLeftArrow: went left");
				Toast.makeText(PlayActivity.this, "went left", Toast.LENGTH_SHORT).show();
				
				if (energyLevel <= 0) {
					Log.v("PlayActivity", "Out of Energy");
					Toast.makeText(PlayActivity.this, "Out of Energy", Toast.LENGTH_SHORT).show();
					intent.putExtra("Empty Battery", true);
					startActivity(intent);
				}
			}
		});
	}
	
	/**
	 * Sets the UpArrow button to move forward if clicked.
	 */
	public void setUpArrow() {
		upArrow.setEnabled(true);
		upArrow.setVisibility(View.VISIBLE);
		upArrow.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				energyLevel -= 3;
				progressBar.setProgress(energyLevel);
				Log.v("PlayActivity", "setUpArrow: went forward");
				Toast.makeText(PlayActivity.this, "went forward", Toast.LENGTH_SHORT).show();
				
				if (energyLevel <= 0) {
					Log.v("PlayActivity", "Out of Energy");
					Toast.makeText(PlayActivity.this, "Out of Energy", Toast.LENGTH_SHORT).show();
					intent.putExtra("Empty Battery", true);
					startActivity(intent);
				}
			}
		});
	}
	
	
	/**
	 * Sets the downArrow button to move backwards if clicked.
	 */
	public void setDownArrow() {
		downArrow.setEnabled(true);
		downArrow.setVisibility(View.VISIBLE);
		downArrow.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				energyLevel -= 3;
				progressBar.setProgress(energyLevel);
				Log.v("PlayActivity", "setDownArrow: went down");
				Toast.makeText(PlayActivity.this, "went down", Toast.LENGTH_SHORT).show();
				
				if (energyLevel <= 0) {
					Log.v("PlayActivity", "Out of Energy");
					Toast.makeText(PlayActivity.this, "Out of Energy", Toast.LENGTH_SHORT).show();
					intent.putExtra("Empty Battery", true);
					startActivity(intent);
				}
			}
		});
	}
	
	/**
	 * Becomes visible when the robot is moving so that the player can pause the robot.
	 */
	public void setUpPause() {
		pause.setEnabled(true);
		pause.setVisibility(View.VISIBLE);
		pause.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				pause.setEnabled(false);
				play.setEnabled(true);
				
				pause.setVisibility(View.INVISIBLE);
				play.setVisibility(View.VISIBLE);
				
				Log.v("PlayActivity", "SetUpPause: Paused");
				Toast.makeText(PlayActivity.this, "Paused", Toast.LENGTH_SHORT).show();
			}
		});
	}
	
	/**
	 * Becomes visible when the robot is paused so that the player can resume moving the robot.
	 */
	public void setUpPlay() {
		play.setEnabled(true);
		play.setVisibility(View.VISIBLE);
		play.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				play.setEnabled(false);
				pause.setEnabled(true);
				
				play.setVisibility(View.INVISIBLE);
				pause.setVisibility(View.VISIBLE);
				
				Log.v("PlayActivity", "SetUpPlay: Playing");
				Toast.makeText(PlayActivity.this, "Playing", Toast.LENGTH_SHORT).show();
			}
		});
	}
	
}
